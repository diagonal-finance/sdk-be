# EVM network chain id scalar type
scalar ChainId

type CheckoutSession {
  expiresAt: DateTime!
  id: UUID!
  url: URL!
}

type CreateCheckoutSessionExpiresAtInvalidError implements GenericError {
  message: String!
}

input CreateCheckoutSessionInput {
  allowedChains: [ChainId!]
  cancelUrl: URL!
  customerId: String!
  expiresAt: DateTime
  packageId: UUID!
  successUrl: URL!
}

type CreateCheckoutSessionPackageNotFoundError implements GenericError {
  message: String!
}

type CreateCheckoutSessionPayload {
  checkoutSession: CheckoutSession!
}

union CreateCheckoutSessionResult = CreateCheckoutSessionExpiresAtInvalidError | CreateCheckoutSessionPackageNotFoundError | CreateCheckoutSessionPayload | CreateCheckoutSessionServiceNotInChainError

type CreateCheckoutSessionServiceNotInChainError implements GenericError {
  message: String!
}

input CreatePortalSessionConfiguration {
  availableChains: [ChainId!]
  availablePackages: [UUID!]
}

type CreatePortalSessionCustomerNotFoundError implements GenericError {
  message: String!
}

input CreatePortalSessionInput {
  configuration: CreatePortalSessionConfiguration
  customerId: String!
  returnUrl: URL!
}

type CreatePortalSessionPackagesNotFoundError implements GenericError {
  message: String!
  packagesNotFound: [UUID!]!
}

type CreatePortalSessionPayload {
  portalSession: PortalSession!
}

union CreatePortalSessionResult = CreatePortalSessionCustomerNotFoundError | CreatePortalSessionPackagesNotFoundError | CreatePortalSessionPayload | CreatePortalSessionServiceNotInChainError

type CreatePortalSessionServiceNotInChainError implements GenericError {
  message: String!
}

# The javascript `Date` as string. Type represents date and time as the ISO Date string.
scalar DateTime

interface GenericError {
  message: String!
}

type Mutation {
  createCheckoutSession(input: CreateCheckoutSessionInput!): CreateCheckoutSessionResult!
  createPortalSession(input: CreatePortalSessionInput!): CreatePortalSessionResult!
}

type PortalSession {
  expiresAt: DateTime!
  id: UUID!
  url: URL!
}

type Query {
  checkoutSession(id: ID!): CheckoutSession
}

# A field whose value conforms to the standard URL format as specified in RFC3986: https://www.ietf.org/rfc/rfc3986.txt.
scalar URL

# A field whose value is a generic Universally Unique Identifier: https://en.wikipedia.org/wiki/Universally_unique_identifier.
scalar UUID

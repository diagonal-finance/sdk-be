# EVM network chain id scalar type
scalar ChainId

type CheckoutSession {
  expiresAt: DateTime!
  id: ID!
  url: URL!
}

input CreateCheckoutSessionInput {
  cancelUrl: URL!
  chainIds: [ChainId!]
  customerId: String!
  expiresAt: DateTime
  packageId: String!
  successUrl: URL!
}

type CreateCheckoutSessionInvalidExpiresAt implements GenericError {
  message: String!
}

type CreateCheckoutSessionNoServiceInChain implements GenericError {
  message: String!
}

type CreateCheckoutSessionPackageNotFound implements GenericError {
  message: String!
}

type CreateCheckoutSessionPayload {
  checkoutSession: CheckoutSession!
}

union CreateCheckoutSessionResult = CreateCheckoutSessionInvalidExpiresAt | CreateCheckoutSessionNoServiceInChain | CreateCheckoutSessionPackageNotFound | CreateCheckoutSessionPayload

input CreatePortalSessionConfiguration {
  allowedChains: [ChainId!]!
  availablePackages: [CreatePortalSessionPackageConfig!]!
}

input CreatePortalSessionInput {
  configuration: CreatePortalSessionConfiguration!
  customerId: String!
  returnUrl: URL!
}

type CreatePortalSessionNoCustomerFoundError implements GenericError {
  message: String!
}

type CreatePortalSessionNoPackageFoundError implements GenericError {
  message: String!
}

input CreatePortalSessionPackageConfig {
  chainId: ChainId!
  packageId: String!
}

type CreatePortalSessionPayload {
  portalSession: PortalSession!
}

union CreatePortalSessionResult = CreatePortalSessionNoCustomerFoundError | CreatePortalSessionNoPackageFoundError | CreatePortalSessionPayload | CreatePortalSessionServiceNotInChainError

type CreatePortalSessionServiceNotInChainError implements GenericError {
  message: String!
}

# The javascript `Date` as string. Type represents date and time as the ISO Date string.
scalar DateTime

interface GenericError {
  message: String!
}

type Mutation {
  createCheckoutSession(input: CreateCheckoutSessionInput!): CreateCheckoutSessionResult!
  createPortalSession(input: CreatePortalSessionInput!): CreatePortalSessionResult!
}

type PortalSession {
  expiresAt: DateTime!
  id: ID!
  url: URL!
}

type Query {
  checkoutSession(id: ID!): CheckoutSession
}

# A field whose value conforms to the standard URL format as specified in RFC3986: https://www.ietf.org/rfc/rfc3986.txt.
scalar URL
